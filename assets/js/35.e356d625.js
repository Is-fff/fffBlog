(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{327:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"hooks是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hooks是什么"}},[t._v("#")]),t._v(" Hooks是什么")]),t._v(" "),s("p",[t._v("Hooks 是 React 16.8 版本引入的一项特性，它"),s("strong",[t._v("允许在函数式组件中使用状态和其他 React 特性")]),t._v("，而不需要使用类组件。Hooks 就是钩子，作用是把某个目标结果钩到某个可能会变化的数据源或者事件源上，那么当被钩到的数据或事件发生变化时，产生这个目标结果的代码会重新执行，产生更新后的结果。")]),t._v(" "),s("h2",{attrs:{id:"react常用钩子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react常用钩子"}},[t._v("#")]),t._v(" React常用钩子")]),t._v(" "),s("h3",{attrs:{id:"usestate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usestate"}},[t._v("#")]),t._v(" useState")]),t._v(" "),s("p",[t._v("控制响应式状态")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("setCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"useeffect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#useeffect"}},[t._v("#")]),t._v(" useEffect")]),t._v(" "),s("p",[t._v("副作用函数，用于执行React执行时的副作用操作(发起网络请求，启动定时器，手动修改DOM)")]),t._v(" "),s("p",[t._v("一般用来实现，组件的生命周期，组件的监视属性")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dependArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//callback,每次执行时的回调，可以返回一个函数，该函数会在组件卸载前执行（实现componentWillUnmount）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dependArray依赖数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不写dependArray,监测所有state,其中一个变化就会触发函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//dependArray = [],谁也不监测,但会在组件挂载完成之后执行一次（实现componentMounted）")]),t._v("\n")])])]),s("h3",{attrs:{id:"useref"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#useref"}},[t._v("#")]),t._v(" useRef")]),t._v(" "),s("p",[t._v("用于创建一个对象用于保存和访问可变的ref对象")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myButton "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化为null")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myButtom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//目标dom")]),t._v("\n")])])]),s("h3",{attrs:{id:"usememo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usememo"}},[t._v("#")]),t._v(" useMemo")]),t._v(" "),s("p",[t._v("用于缓存和重用计算成本高的值，用于提升性能，类似于watch监视属性(实现shouldComponentUpdate)")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useMemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("comuteData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//size改变才会更新result")]),t._v("\n")])])]),s("h3",{attrs:{id:"usecallback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usecallback"}},[t._v("#")]),t._v(" useCallback")]),t._v(" "),s("p",[t._v("类似于useMemo，不过useCallback是用来缓存回调函数的，以便在依赖项变化时避免不必要的函数重新创建")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" handleClick "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理点击事件逻辑")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//由于useCallback返回的是一个函数，因此，你甚至可以用它来返回一个子函数组件")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//优点：可以避免父组件每次更新时都重新渲染这个组件")]),t._v("\n")])])]),s("h3",{attrs:{id:"usecontext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usecontext"}},[t._v("#")]),t._v(" useContext")]),t._v(" "),s("p",[t._v("创建状态上下文，用于在多层嵌套的组件中传递数据")]),t._v(" "),s("h3",{attrs:{id:"usereducer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usereducer"}},[t._v("#")]),t._v(" useReducer")]),t._v(" "),s("p",[s("code",[t._v("useReducer")]),t._v(" 是 "),s("code",[t._v("useState")]),t._v(" 的替代方案。它接收一个形如 "),s("code",[t._v("(state, action) => newState 的 reducer")]),t._v("，并返回当前的 state 以及与其配套的 "),s("code",[t._v("dispatch")]),t._v(" 方法。")]),t._v(" "),s("p",[t._v("当状态更新逻辑较复杂时可以考虑使用 useReducer。useReducer 可以同时更新多个状态，而且能把对状态的修改从组件中独立出来。")]),t._v(" "),s("p",[t._v("相比于 useState，useReducer 可以更好的描述“如何更新状态”。例如：组件负责发出行为，useReducer 负责更新状态。")]),t._v(" "),s("p",[t._v("好处是："),s("strong",[t._v("让代码逻辑更清晰，代码行为更易预测。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useReducer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reducer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initAction"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//initAction:state初始化处理函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("reducer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'count'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("useState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useReducer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reducer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                 \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修改状态")]),t._v("\n")])])]),s("h2",{attrs:{id:"多层级组件设计思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多层级组件设计思路"}},[t._v("#")]),t._v(" 多层级组件设计思路")]),t._v(" "),s("p",[s("strong",[t._v("需求")]),t._v("：改善多层props传递时导致的一些中间组件无意义重渲染")]),t._v(" "),s("h3",{attrs:{id:"组件ui层面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件ui层面"}},[t._v("#")]),t._v(" 组件UI层面")]),t._v(" "),s("p",[t._v("使用Context定义上下文/状态管理工具")]),t._v(" "),s("h3",{attrs:{id:"代码逻辑层面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码逻辑层面"}},[t._v("#")]),t._v(" 代码逻辑层面")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("组件职责单一")]),t._v("：确保每个组件专注于单一功能，减少组件间状态依赖依赖。")]),t._v(" "),s("li",[s("strong",[t._v("状态提升")]),t._v("：将低级组件依赖的状态提升到高级组件，中间组件只协助传递不使用。")]),t._v(" "),s("li",[s("strong",[t._v("自定义 Hooks")]),t._v("：封装复杂的逻辑，便于复用。")]),t._v(" "),s("li",[s("strong",[t._v("按功能划分组件")]),t._v("：模块化功能，提高代码可维护性。")]),t._v(" "),s("li",[s("strong",[t._v("性能优化")]),t._v("：使用 "),s("code",[t._v("React.memo")]),t._v(" 和 "),s("code",[t._v("useCallback")]),t._v(" 避免不必要的重新渲染。")])]),t._v(" "),s("h3",{attrs:{id:"useref细节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#useref细节"}},[t._v("#")]),t._v(" useRef细节")]),t._v(" "),s("p",[t._v("useRef 返回一个可变的 ref 对象，其内部只有一个 current 属性被初始化为传入的参数（initialValue）\n"),s("strong",[t._v("useRef 返回的 ref 对象在组件的整个生命周期内持续存在")]),t._v(" "),s("strong",[t._v("更新 current 值时并不会触发页面的重新渲染（re-render）")]),t._v("\nuseRef 会在每次渲染时返回同一个 ref 对象\n本质上，useRef 就像是可以在其 .current 属性中保存一个可变值的“盒子”。")]),t._v(" "),s("p",[t._v("因此，Ref不仅可以用来存放元素ref，还可以用来跨渲染周期保存对象。")]),t._v(" "),s("h3",{attrs:{id:"应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),s("p",[s("strong",[t._v("实现useEffect的对象监听")])]),t._v(" "),s("p",[t._v("使用useRef保存上一次渲染周期的监听对象，和当前对象深对比，实现useEffecr监听对象")]),t._v(" "),s("p",[t._v("（useEffect监视对象引用时会无限触发，因为每一次渲染都会重新创建对象，每次的引用都不同）")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" isEqual "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lodash'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用lodash库的深比较")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("useCampare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("compare")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ref "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" useRef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compare")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// deep compare")]),t._v("\n    ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" compareObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useCampare")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("compareObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"优化重复的网络请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化重复的网络请求"}},[t._v("#")]),t._v(" 优化重复的网络请求")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hasFetched "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于跟踪请求是否已经发出过，或者跟踪请求参数是否改变")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasFetched"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果请求已发出，则不再发出新的请求")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fetchData")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" axios"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://api.example.com/data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        hasFetched"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标记请求已发出")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'请求失败'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"react18更新内容-新特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react18更新内容-新特性"}},[t._v("#")]),t._v(" React18更新内容/新特性")]),t._v(" "),s("h3",{attrs:{id:"并发渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并发渲染"}},[t._v("#")]),t._v(" 并发渲染")]),t._v(" "),s("p",[t._v("新的底层渲染机制，使得React能够同时准备多个版本的UI。")]),t._v(" "),s("p",[t._v("在18之前，采用同步渲染，即一旦渲染无法中断，直到用户看到渲染结果。")]),t._v(" "),s("p",[t._v("而并发渲染的关键特性："),s("strong",[t._v("渲染可中断")]),t._v("，随时可以开启，挂起，继续一个渲染任务。这样做，React 就可以在后台提前准备新的屏幕内容，而不阻塞主线程。这意味着用户输入可以被立即响应，即使存在大量渲染任务，也能有流畅的用户体验。")]),t._v(" "),s("h3",{attrs:{id:"自动批处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动批处理"}},[t._v("#")]),t._v(" 自动批处理")]),t._v(" "),s("p",[t._v("在React18之前，自动批处理只存在于"),s("strong",[t._v("合成事件")]),t._v("处理程序中，即点击事件之后触发的"),s("strong",[t._v("回调中有多个setState动作，只会触发一次渲染")])]),t._v(" "),s("p",[t._v("But，在Promise和setTimeout定时器中，默认不会开启这样的机制")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以前: 只有 React 事件会被批处理。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setFlag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("f")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// React 会渲染两次，每次更新一个状态（没有批处理）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 现在: 超时，promise，本机事件处理程序")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原生应用时间处理程序或者任何其他时间都被批处理了")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setFlag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("f")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最终，React 将仅会重新渲染一次（这就是批处理！）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"过渡更新-实现并发渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过渡更新-实现并发渲染"}},[t._v("#")]),t._v(" 过渡更新（实现并发渲染）")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("useTransition")]),t._v("： 一个用于开启过渡更新的 Hook，用于跟踪待定转场状态。")]),t._v(" "),s("li",[s("code",[t._v("startTransition")]),t._v("： 当 Hook 不能使用时，用于开启过渡的方法。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" startTransition "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 紧急更新: 显示输入的内容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInputValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将任何内部的状态更新都标记为过渡更新")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startTransition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 过渡更新: 展示结果")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSearchQuery")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"新的suspence特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新的suspence特性"}},[t._v("#")]),t._v(" 新的Suspence特性")]),t._v(" "),s("p",[t._v("支持服务端 Suspense，并且使用并发渲染特性扩展了其功能。")]),t._v(" "),s("h3",{attrs:{id:"新的渲染api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新的渲染api"}},[t._v("#")]),t._v(" 新的渲染API")]),t._v(" "),s("h3",{attrs:{id:"新的严格模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新的严格模式"}},[t._v("#")]),t._v(" 新的严格模式")]),t._v(" "),s("p",[t._v("React 18 为严格模式下的开发环境引入了一个新的检查机制。每当组件第一次挂载时，这个检查机制将自动卸载又重新挂载每个组件，并在第二次挂载时复用先前的状态。")]),t._v(" "),s("p",[t._v("这"),s("strong",[t._v("允许 React 在保留状态的同时添加和移除 UI。")])]),t._v(" "),s("h3",{attrs:{id:"新的hook"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新的hook"}},[t._v("#")]),t._v(" 新的Hook")]),t._v(" "),s("p",[t._v("useId,useTransition,useDeferredValue,useSyncExternalStore,useInsertionEffect")]),t._v(" "),s("h2",{attrs:{id:"react如何引入css"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react如何引入css"}},[t._v("#")]),t._v(" React如何引入CSS")]),t._v(" "),s("h3",{attrs:{id:"使用行内样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用行内样式"}},[t._v("#")]),t._v(" 使用行内样式")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//驼峰命名法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" div1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"300px"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("margin")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"30px auto"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("backgroundColor")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#44014C"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("minHeight")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"200px"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("boxSizing")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"border-box"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("优点：样式隔离，不会污染其它组件")]),t._v(" "),s("p",[t._v("缺点：JS代码样式冗杂混乱，代码提示不友好，某些样式无法编写（伪类/为元素）")]),t._v(" "),s("h3",{attrs:{id:"引入css文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引入css文件"}},[t._v("#")]),t._v(" 引入CSS文件")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./App.css'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("优点：学习成本低，CSS友好")]),t._v(" "),s("p",[t._v("缺点：样式全局生效，互相影响")]),t._v(" "),s("h3",{attrs:{id:"css-module"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-module"}},[t._v("#")]),t._v(" CSS Module")]),t._v(" "),s("p",[t._v("采用WebPack特性的方案，需要在WebPack配置modules:true")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./App.module.css'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("优点：局部化样式(更好的模块化)，解决命名冲突，学习成本低，预处理器支持（SCSS/Less）")]),t._v(" "),s("p",[t._v("缺点：依赖Webpack,样式嵌套受限")]),t._v(" "),s("h3",{attrs:{id:"css-in-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-in-js"}},[t._v("#")]),t._v(" CSS in JS")]),t._v(" "),s("p",[t._v("第三方库提供，如styled-components")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" SelfLink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" styled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n height: 50px;\n border: 1px solid red;\n color: yellow;\n")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("优点：样式和组件紧耦合易于维护，支持动态样式（JS支持），样式隔离，易于组合")]),t._v(" "),s("p",[t._v("缺点：有一定的学习成本，增加JS负担，打包的bundle.js会更大，不利于调试")]),t._v(" "),s("h2",{attrs:{id:"react生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react生命周期"}},[t._v("#")]),t._v(" React生命周期")]),t._v(" "),s("h3",{attrs:{id:"react17之前-旧版生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react17之前-旧版生命周期"}},[t._v("#")]),t._v(" React17之前，旧版生命周期")]),t._v(" "),s("p",[s("img",{attrs:{src:"img/ReactLifeOld.png",alt:"img"}})]),t._v(" "),s("p",[t._v("这个版本，还没有Hook，所以只有类组件存在生命周期")]),t._v(" "),s("p",[t._v("constructor最先调用，可以初始化state")]),t._v(" "),s("p",[t._v("componentWillxxx -> render(渲染到页面)  -> componentDidxxx")]),t._v(" "),s("p",[t._v("父组件render，会触发子组件的componentWillReceiveProps")]),t._v(" "),s("p",[t._v("shouldComponentUpdate()在更新前调用，拿到新旧state和props，判断是否重新渲染")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldComponentUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//组件是否需要更新，需要返回一个布尔值，返回true则更新，返回flase不更新，这是一个关键点")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shouldComponentUpdate组件是否应该更新，需要返回布尔值'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("卸载:componentWillUnmount")]),t._v(" "),s("h3",{attrs:{id:"react17之后-新版生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react17之后-新版生命周期"}},[t._v("#")]),t._v(" React17之后，新版生命周期")]),t._v(" "),s("p",[t._v("新版在render之后，dom不是立刻挂载，还会经历一个getSnapsshotBeforeUpdate钩子")]),t._v(" "),s("p",[s("img",{attrs:{src:"img/ReactLifeNew.png",alt:"img"}})]),t._v(" "),s("p",[t._v("弃用了"),s("code",[t._v("componentWillMount")]),t._v("、"),s("code",[t._v("componentWillReceiveProps")]),t._v("、"),s("code",[t._v("componentWillUpdate")]),t._v("这三个钩子（没有Will钩子了），取而代之的是"),s("code",[t._v("getDerivedStateFromProps")]),t._v(",其实就是把那三个钩子的含义融入到了这一个钩子中")]),t._v(" "),s("p",[t._v("新增"),s("code",[t._v("getSnapshotBeforeUpdate")]),t._v("，这里可获取到即将要更新的props和state")]),t._v(" "),s("p",[t._v("这个生命周期主要为我们提供了一个可以在组件实例化或 props、state 发生变化后根据 props 修改 state 的一个时机。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSnapshotBeforeUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prevState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("在更新阶段 "),s("strong",[t._v("render 后挂载到真实 DOM 前进行的操作")]),t._v("，它使得组件能在发生更改之前从 DOM 中捕获一些信息。此组件返回的任何值将作为 componentDidUpdate 的第三个参数。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSnapshotBeforeUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("prevProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prevState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("     \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"getSnapshotBeforeUpdate"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组件更新成功钩子  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("prevProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prevState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" snapshot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("     \n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("snapshot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "getSnapshotBeforeUpdate" ')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"父子组件生命周期执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父子组件生命周期执行顺序"}},[t._v("#")]),t._v(" 父子组件生命周期执行顺序")]),t._v(" "),s("h3",{attrs:{id:"父子组件初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父子组件初始化"}},[t._v("#")]),t._v(" 父子组件初始化")]),t._v(" "),s("p",[t._v("父组件 constructor")]),t._v(" "),s("p",[t._v("父组件 getDerivedStateFromProps")]),t._v(" "),s("p",[t._v("父组件 render")]),t._v(" "),s("p",[t._v("子组件 constructor")]),t._v(" "),s("p",[t._v("子组件 getDerivedStateFromProps")]),t._v(" "),s("p",[t._v("子组件 render")]),t._v(" "),s("p",[t._v("子组件 componentDidMount")]),t._v(" "),s("p",[t._v("父组件 componentDidMount")]),t._v(" "),s("p",[s("strong",[t._v("总结")]),t._v("：render相当于vue的mounted,React是在render的时候，才会去发现子组件并挂载完子组件再挂载自身")]),t._v(" "),s("h3",{attrs:{id:"子组件修改自身state"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子组件修改自身state"}},[t._v("#")]),t._v(" 子组件修改自身state")]),t._v(" "),s("p",[t._v("子组件 getDerivedStateFromProps")]),t._v(" "),s("p",[t._v("子组件 shouldComponentUpdate")]),t._v(" "),s("p",[t._v("子组件 render")]),t._v(" "),s("p",[t._v("子组件 getSnapShotBeforeUpdate")]),t._v(" "),s("p",[t._v("子组件 componentDidUpdate")]),t._v(" "),s("h3",{attrs:{id:"父组件修改props"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父组件修改props"}},[t._v("#")]),t._v(" 父组件修改props")]),t._v(" "),s("p",[t._v("父组件 getDerivedStateFromProps")]),t._v(" "),s("p",[t._v("父组件 shouldComponentUpdate")]),t._v(" "),s("p",[t._v("父组件 render")]),t._v(" "),s("p",[t._v("子组件 getDerivedStateFromProps")]),t._v(" "),s("p",[t._v("子组件 shouldComponentUpdate")]),t._v(" "),s("p",[t._v("子组件 render")]),t._v(" "),s("p",[t._v("子组件 getSnapShotBeforeUpdate")]),t._v(" "),s("p",[t._v("父组件 getSnapShotBeforeUpdate")]),t._v(" "),s("p",[t._v("子组件 componentDidUpdate")]),t._v(" "),s("p",[t._v("父组件 componentDidUpdate")]),t._v(" "),s("p",[s("strong",[t._v("总结")]),t._v("：子组件render之后会触发记录快照，紧接父组件也记录快照，才触发子组件更新完毕钩子")]),t._v(" "),s("h3",{attrs:{id:"卸载子组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#卸载子组件"}},[t._v("#")]),t._v(" 卸载子组件")]),t._v(" "),s("p",[t._v("父组件 getDerivedStateFromProps")]),t._v(" "),s("p",[t._v("父组件 shouldComponentUpdate")]),t._v(" "),s("p",[t._v("父组件 render")]),t._v(" "),s("p",[t._v("父组件 getSnapShotBeforeUpdate")]),t._v(" "),s("p",[t._v("子组件 componentWillUnmount")]),t._v(" "),s("p",[t._v("父组件 componentDidUpdate")]),t._v(" "),s("p",[t._v("**总结：**组件卸载，只会执行componentWillUnmount钩子，但是父组件会执行一次update流程，并在挂载完成前把子组件卸载了")]),t._v(" "),s("h2",{attrs:{id:"react的异常处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react的异常处理"}},[t._v("#")]),t._v(" React的异常处理")]),t._v(" "),s("p",[t._v("react16引入了"),s("strong",[t._v("错误边界")]),t._v("概念，错误边界是一个组件，它可以捕获在组件树中任何位置的javaScript错误同时展示降级UI，而不会渲染哪些发送崩溃的组件树")]),t._v(" "),s("p",[t._v("形成错误边界的两个条件")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("使用了"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDerivedStateFromError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//渲染备用UI")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("使用了componentDidCatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印错误信息")]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDerivedStateFromError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("hasError")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//降级UI显示状态")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidCatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" errorInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("logErrorToMyService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" errorInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//错误信息上传服务器")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在react16之后，会把在渲染期间发生的所有错误都打印到控制台，但是无法捕获：")]),t._v(" "),s("ol",[s("li",[t._v("事件处理程序")]),t._v(" "),s("li",[t._v("异步代码")]),t._v(" "),s("li",[t._v("服务端渲染")]),t._v(" "),s("li",[t._v("自身抛出来的错误")])]),t._v(" "),s("h2",{attrs:{id:"setstate的同步和异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setstate的同步和异步"}},[t._v("#")]),t._v(" setState的同步和异步")]),t._v(" "),s("h3",{attrs:{id:"在react18之前"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在react18之前"}},[t._v("#")]),t._v(" 在React18之前")]),t._v(" "),s("p",[t._v("只要进入了React的调度流程，那么setState就是异步的，而只要没有进入React的调度流程，那么它将是同步的。")]),t._v(" "),s("p",[t._v("非React调度：setTimeout、setInterval、原生dom事件处理程序")]),t._v(" "),s("h3",{attrs:{id:"在react18之后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在react18之后"}},[t._v("#")]),t._v(" 在React18之后")]),t._v(" "),s("p",[t._v("加入了批处理机制，所有的更新都会自动进行批处理(也就是异步合并)")]),t._v(" "),s("p",[s("strong",[t._v("解决")]),t._v("：对setState包裹"),s("strong",[t._v("flushSync")]),t._v("以恢复同步更新")]),t._v(" "),s("h2",{attrs:{id:"react的fiber架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react的fiber架构"}},[t._v("#")]),t._v(" React的Fiber架构")]),t._v(" "),s("p",[t._v("Fiber是React16发布的一种新的虚拟dom结构，用于"),s("strong",[t._v("支持并发渲染和优化Diff算法")])]),t._v(" "),s("p",[t._v("是一颗链表树，节点会存放渲染前和当前的State状态，便于恢复渲染之后的状态恢复。")]),t._v(" "),s("p",[t._v("原先的树结构递归渲染不支持渲染中断，而采用链表引用的方式使得可以在任何时候中断渲染，都可以拿到当前状态。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Fiber数据结构")]),t._v("\ntype Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Fiber组件类型,ClassComponent、FuntionComponent")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" WorkTag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 节点key")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 节点类型")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前节点组件实例")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("stateNode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父节点")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子节点")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("child")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 兄弟节点")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("sibling")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Diff算法对比的，其实是新旧的Fiber链表树")]),t._v(" "),s("p",[t._v("render阶段开始时，会从rootFiber开始向下递归遍历，对遍历到的节点调用"),s("strong",[t._v("beginWork")]),t._v("方法，若该节点存在children节点，则继续向下递归，直到没有children，则调用"),s("strong",[t._v("CompleteWork")]),t._v("处理该节点，处理完该节点，则去遍历该节点的兄弟节点，并执行以上相同的过程。")]),t._v(" "),s("p",[t._v("对于以下结构")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      i am\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("span"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("KaSong"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("span"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nReactDOM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("App "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"img/fiber.png",alt:"img"}})]),t._v(" "),s("p",[t._v("fiber过程")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" rootFiber beginWork\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" App Fiber beginWork\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" div Fiber beginWork\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"i am"')]),t._v(" Fiber beginWork\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"i am"')]),t._v(" Fiber completeWork\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.")]),t._v(" span Fiber beginWork\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.")]),t._v(" span Fiber completeWork\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.")]),t._v(" div Fiber completeWork\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.")]),t._v(" App Fiber completeWork\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.")]),t._v(" rootFiber completeWork\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//没有Kasong是因为会对单文本节点做其它处理以提高性能，这里不说先")]),t._v("\n")])])]),s("p",[s("strong",[t._v("而diff算法，则发生在beginWork和completeWork中")])]),t._v(" "),s("p",[t._v("beginWork：创建和标记更新节点")]),t._v(" "),s("p",[t._v("completeWork：收集副作用列表")]),t._v(" "),s("h2",{attrs:{id:"react的diff算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react的diff算法"}},[t._v("#")]),t._v(" React的Diff算法")]),t._v(" "),s("p",[t._v("分为三个层级的策略：Tree、Component、element")]),t._v(" "),s("h3",{attrs:{id:"tree层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tree层"}},[t._v("#")]),t._v(" Tree层")]),t._v(" "),s("p",[t._v("仅对比相同层级的节点，不做优化，只做增删操作")]),t._v(" "),s("h3",{attrs:{id:"component层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#component层"}},[t._v("#")]),t._v(" Component层")]),t._v(" "),s("p",[t._v("React认为不同类型的 "),s("a",{attrs:{href:"https://zhida.zhihu.com/search?q=component&zhida_source=entity&is_preview=1",target:"_blank",rel:"noopener noreferrer"}},[t._v("component"),s("OutboundLink")],1),t._v(" 是很少存在相似 DOM tree 的机会，因此在component层级，会对比节点的组件类型，如果类型相同，则继续往下diff；如果类型不同，则删除该节点和下面所有节点，创建新节点")]),t._v(" "),s("h3",{attrs:{id:"element层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#element层"}},[t._v("#")]),t._v(" Element层")]),t._v(" "),s("p",[t._v("同级节点，采用key值对比")]),t._v(" "),s("p",[t._v("提供三种操作INSERT_MARKUP(插入),MOVE_EXISTING(移动),REMOVE_NODE(删除)")]),t._v(" "),s("h2",{attrs:{id:"react组件过渡动画"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react组件过渡动画"}},[t._v("#")]),t._v(" React组件过渡动画")]),t._v(" "),s("p",[t._v("使用CSSTransition组件实现")]),t._v(" "),s("p",[t._v("当有两个组件切换：采用SwitchTransition包裹控制")]),t._v(" "),s("p",[t._v("当有多个组件切换：采用TransitionGroup包裹控制")]),t._v(" "),s("h2",{attrs:{id:"为什么使用函数式组件-优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用函数式组件-优点"}},[t._v("#")]),t._v(" 为什么使用函数式组件，优点")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("简单性：")]),t._v(" 函数式组件比类组件更简单，更易于理解。它们没有生命周期方法、状态和this绑定增加的复杂性。")]),t._v(" "),s("li",[s("strong",[t._v("性能：")]),t._v(" 函数式组件比类组件更高效。它们没有为每次渲染创建新实例的额外开销。而且函数式组件可以使用React Hooks，这使得它们的性能更高。")]),t._v(" "),s("li",[s("strong",[t._v("更易于测试：")]),t._v(" 函数式组件比类组件更易于测试。因为它们只是普通的JavaScript函数，可以使用像Jest这样的JavaScript测试工具进行测试。")]),t._v(" "),s("li",[s("strong",[t._v("更易于重用：")]),t._v(" 函数式组件比类组件更易于重用。因为它们只是普通的JavaScript函数，可以在应用程序的不同部分轻松重复使用。")]),t._v(" "),s("li",[s("strong",[t._v("更易于理解：")]),t._v(" 函数式组件比类组件更易于理解。因为它们只是普通的JavaScript函数，它们的行为更可预测、更易于理解。")]),t._v(" "),s("li",[s("strong",[t._v("Hooks：")]),t._v(" 函数式组件可以使用React Hooks，在函数式组件中使用状态和其他React功能，而类组件不能。")])]),t._v(" "),s("h2",{attrs:{id:"react-hooks-不能在循环条件嵌套语句中使用的原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-hooks-不能在循环条件嵌套语句中使用的原因"}},[t._v("#")]),t._v(" React Hooks 不能在循环条件嵌套语句中使用的原因")]),t._v(" "),s("p",[t._v("这是因为hooks为了在函数组件中引入状态，维护了一个"),s("strong",[t._v("有序表")]),t._v("。")]),t._v(" "),s("p",[t._v("这样每次执行才能保证状态能对应上。函数本身不能保存状态，我们需要额外维护一个有序的表，在执行 setState 之类的 hook 时，将它们保存到这个表里。")]),t._v(" "),s("p",[t._v("这要求每次函数组件的 hook 执行的位置相同，数量正确，否则会导致错位，不能拿到预期的状态值。")])])}),[],!1,null,null,null);s.default=e.exports}}]);